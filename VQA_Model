{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3064985,"sourceType":"datasetVersion","datasetId":1876338},{"sourceId":69001,"sourceType":"modelInstanceVersion","isSourceIdPinned":true,"modelInstanceId":57552}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/trnquanghuyn/san-cvpr-2016?scriptVersionId=185294638\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-25T02:58:21.378317Z","iopub.execute_input":"2024-06-25T02:58:21.379153Z","iopub.status.idle":"2024-06-25T02:58:22.415398Z","shell.execute_reply.started":"2024-06-25T02:58:21.379122Z","shell.execute_reply":"2024-06-25T02:58:22.414552Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import os\nimport torch\nfrom torch import nn\nfrom torch.utils.data import DataLoader, Dataset\nfrom torchvision import datasets, transforms\nimport pandas as pd\nfrom PIL import Image\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-06-25T02:58:22.417324Z","iopub.execute_input":"2024-06-25T02:58:22.417884Z","iopub.status.idle":"2024-06-25T02:58:28.520346Z","shell.execute_reply.started":"2024-06-25T02:58:22.417846Z","shell.execute_reply":"2024-06-25T02:58:28.519213Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"# Get cpu, gpu or mps device for training.\ndevice = (\n    \"cuda\"\n    if torch.cuda.is_available()\n    else \"mps\"\n    if torch.backends.mps.is_available()\n    else \"cpu\"\n)\nprint(f\"Using {device} device\")","metadata":{"execution":{"iopub.status.busy":"2024-06-25T02:58:28.521781Z","iopub.execute_input":"2024-06-25T02:58:28.522376Z","iopub.status.idle":"2024-06-25T02:58:28.555811Z","shell.execute_reply.started":"2024-06-25T02:58:28.522335Z","shell.execute_reply":"2024-06-25T02:58:28.554795Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Using cuda device\n","output_type":"stream"}]},{"cell_type":"code","source":"class TextData():\n    def __init__(self, data_dir):\n        self.data_csv = pd.read_csv(data_dir)\n    def __len__(self):\n        return self.data_csv.shape[0]\n    def __getitem__(self, idx):\n        question = self.data_csv.iloc[idx, 0]\n        answer = self.data_csv.iloc[idx, 1]\n            \n        return question, answer\ntext_data = TextData(\"/kaggle/input/processed-daquar-dataset/data_train.csv\")\nfrom torchtext.data.utils import get_tokenizer\nfrom torchtext.vocab import build_vocab_from_iterator\n\ntokenizer = get_tokenizer(\"basic_english\")\n\ndef yield_token(data):\n    for question, answer in data:\n        yield tokenizer(question+\" \"+answer)\ntry:\n    vocab = torch.load('/kaggle/input/san_modelcvpr2016/pytorch/v1/1/daquar_vocab.pth')\nexcept:\n    vocab = build_vocab_from_iterator(yield_token(text_data), specials=[\"<unk>\"])\n    vocab.set_default_index(vocab[\"<unk>\"])\n    torch.save(vocab, 'daquar_vocab.pth')","metadata":{"execution":{"iopub.status.busy":"2024-06-25T03:01:15.626816Z","iopub.execute_input":"2024-06-25T03:01:15.627232Z","iopub.status.idle":"2024-06-25T03:01:16.734099Z","shell.execute_reply.started":"2024-06-25T03:01:15.627196Z","shell.execute_reply":"2024-06-25T03:01:16.732994Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"# transform to modify the features and target_transform to modify the labels\nclass DaquarDataset(Dataset):\n    def __init__(self, data_csv_dir, vocab, tokenizer ,transform=None):\n        self.data_csv = pd.read_csv(data_csv_dir)\n        self.transform = transform\n        self.vocab = vocab\n        self.tokenizer = tokenizer\n#         self.target_transform = target_transform\n    def __len__(self):\n        return self.data_csv.shape[0]\n    def __getitem__(self, idx):\n        image_path = os.path.join(\"/kaggle/input/processed-daquar-dataset/images/\", self.data_csv.iloc[idx,2]+\".png\")\n        image_pil = Image.open(image_path)\n        \n        question = self.data_csv.iloc[idx, 0]\n        question = torch.LongTensor(vocab(tokenizer(question)))\n        answer = self.data_csv.iloc[idx, 1]\n        answer = torch.LongTensor(vocab(tokenizer(answer)))\n        if self.transform:\n            image = self.transform(image_pil)\n            \n        return image, question, answer\nfrom torchvision.transforms import v2\ntransforms = v2.Compose([\n    v2.Resize(size=(448,448)),\n    v2.ToImage(),\n    v2.ToDtype(torch.float32, scale=True)\n])","metadata":{"execution":{"iopub.status.busy":"2024-06-25T03:01:20.465449Z","iopub.execute_input":"2024-06-25T03:01:20.466059Z","iopub.status.idle":"2024-06-25T03:01:20.512817Z","shell.execute_reply.started":"2024-06-25T03:01:20.466026Z","shell.execute_reply":"2024-06-25T03:01:20.512048Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"data_train = DaquarDataset(\"/kaggle/input/processed-daquar-dataset/data_train.csv\", vocab, tokenizer, transform=transforms)\ndata_test = DaquarDataset(\"/kaggle/input/processed-daquar-dataset/data_eval.csv\", vocab, tokenizer, transform=transforms)\ndata_train_loader = DataLoader(data_train, batch_size=1, shuffle=True)\ndata_test_loader = DataLoader(data_test, batch_size=1, shuffle=True)\ntest_data = data_train[0]","metadata":{"execution":{"iopub.status.busy":"2024-06-25T03:01:21.765274Z","iopub.execute_input":"2024-06-25T03:01:21.765652Z","iopub.status.idle":"2024-06-25T03:01:21.884442Z","shell.execute_reply.started":"2024-06-25T03:01:21.765613Z","shell.execute_reply":"2024-06-25T03:01:21.883505Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"class ImageModel(nn.Module):\n    def __init__(self, vgg_type='vgg19_bn', embed_size=500):\n        super().__init__()\n        model = torch.hub.load('pytorch/vision:v0.10.0', vgg_type, weights=True)\n        vgg_feature = list(model.features.children())\n        self.backbone = nn.Sequential(*vgg_feature)\n        self.perceptron = nn.Sequential(nn.Linear(in_features=512, out_features=1024), nn.Tanh())\n    \n    def forward(self, image):\n        img_features = self.backbone(image) # (batch_size, 512, 14, 14)\n        img_features = img_features.view(-1, 512, 196).transpose(1,2)      \n        img_features = self.perceptron(img_features)\n        \n        return img_features # [batch_size, 196, 512]","metadata":{"execution":{"iopub.status.busy":"2024-06-25T03:01:26.061658Z","iopub.execute_input":"2024-06-25T03:01:26.062029Z","iopub.status.idle":"2024-06-25T03:01:26.070343Z","shell.execute_reply.started":"2024-06-25T03:01:26.062001Z","shell.execute_reply":"2024-06-25T03:01:26.069284Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"![image.png](attachment:06fe51d9-5343-4717-aae7-97192a395287.png)","metadata":{},"attachments":{"06fe51d9-5343-4717-aae7-97192a395287.png":{"image/png":""}}},{"cell_type":"code","source":"class QuestionModel(nn.Module):\n    def __init__(self,vocab_size, embed_size=500, hidden_size=1024):\n        super().__init__()\n        self.embed = nn.Embedding(num_embeddings=vocab_size, embedding_dim=embed_size)\n        self.lstm = nn.LSTM(input_size=500, hidden_size=1024, batch_first=True)\n    def forward(self, text):\n        text_features = self.embed(text)\n        output, (h_n,c_n) = self.lstm(text_features)\n        return h_n # ht, (batch_size, embed_size)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T03:01:28.418654Z","iopub.execute_input":"2024-06-25T03:01:28.419038Z","iopub.status.idle":"2024-06-25T03:01:28.42661Z","shell.execute_reply.started":"2024-06-25T03:01:28.41901Z","shell.execute_reply":"2024-06-25T03:01:28.425475Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"class SANModel(nn.Module):\n    def __init__(self, vocab_size):\n        super().__init__()\n        self.image_model = ImageModel() \n        self.question_model = QuestionModel(vocab_size)\n        \n        self.tanh = nn.Tanh()\n        \n        self.ff_question = nn.Linear(in_features=1024, out_features=512) \n        self.ff_image = nn.Linear(in_features=1024, out_features=512, bias=False)\n        self.ff_attention = nn.Linear(in_features=512, out_features=1)\n        \n        self.ff_ans = nn.Linear(in_features=1024, out_features=vocab_size)\n        \n        self.softmax = nn.Softmax(dim=1)\n    def compute_attention(self, vi, vq):\n        hA = self.tanh(self.ff_image(vi) + self.ff_question(vq))\n        hA_atn = self.ff_attention(hA).squeeze(dim=2)\n        pI = self.softmax(hA_atn)\n        vI_attended = (pI.unsqueeze(dim=2) * vi)\n        vI_attended = vI_attended.sum(dim=1)\n        u = vI_attended + vq.squeeze(dim=1)\n        return u\n        \n    def forward(self, image, question):\n        vI = self.image_model(image) # (batch_size, 196, 1024)\n        vQ = self.question_model(question) # (batch_size, 1, 1024)\n        \n        u0 = self.compute_attention(vI, vQ)\n\n        u1 = self.compute_attention(vI, u0)\n        ff_u1 = self.ff_ans(u1)\n        softmax = nn.Softmax(dim=1)\n        p_ans = softmax(ff_u1)\n        return p_ans\nmodel = SANModel(len(vocab)).to(device)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T06:46:02.527856Z","iopub.execute_input":"2024-06-25T06:46:02.528481Z","iopub.status.idle":"2024-06-25T06:46:04.036353Z","shell.execute_reply.started":"2024-06-25T06:46:02.528451Z","shell.execute_reply":"2024-06-25T06:46:04.035525Z"},"trusted":true},"execution_count":45,"outputs":[{"name":"stderr","text":"Using cache found in /root/.cache/torch/hub/pytorch_vision_v0.10.0\n/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG19_BN_Weights.IMAGENET1K_V1`. You can also use `weights=VGG19_BN_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n","output_type":"stream"}]},{"cell_type":"code","source":"# setup for trainning\nloss_fn = nn.CrossEntropyLoss()\nlearning_rate = 0.05\noptimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T06:46:05.20052Z","iopub.execute_input":"2024-06-25T06:46:05.20137Z","iopub.status.idle":"2024-06-25T06:46:05.206858Z","shell.execute_reply.started":"2024-06-25T06:46:05.201332Z","shell.execute_reply":"2024-06-25T06:46:05.205803Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"\ndef train_loop(dataloader, model, optimizer):\n    size = len(dataloader.dataset)\n    model.train()\n    global i\n    correct = 0\n    global loss_ls\n    for data in dataloader:\n#         answer_vector = torch.zeros((1,1187)).to(device)\n#         answer_vector[0][data[2][0][0]] = 1\n        predict = model(data[0].to(device), data[1].to(device))\n        predict_prob = predict[0][data[2][0][0]]\n        max_index = torch.argmax(predict[0]).item()\n        if (max_index == data[2][0][0]):\n            correct += 1\n        \n        loss = -torch.mean(torch.log(predict_prob))\n\n        loss_ls.append(loss)\n        \n        # Backpropagation\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n        \n        avg_loss = sum(loss_ls) / i\n        acc = correct / i\n        torch.nn.utils.clip_grad_norm_(model.parameters(), avg_loss)\n        j = i-1\n        if j % 1000 ==0:\n            loss = loss.item()\n            print(f\"loss: {loss:>7f} , avg_loss: {avg_loss:>7f}, acc: {acc:>7f}\")\n        i += 1\ndef test_loop(dataloader, model, loss_fn, i=1):\n    model.eval()\n    size = len(dataloader.dataset)\n    num_batches = len(dataloader)\n    test_loss, correct = 0, 0\n    global loss_ls \n    with torch.no_grad():\n        for data in dataloader:\n            answer_vector = torch.zeros((1,1187)).to(device)\n            answer_vector[0][data[2][0][0]] = 1\n            predict = model(data[0].to(device), data[1].to(device))\n            loss = loss_fn(predict, answer_vector)\n            loss_ls.append(loss)\n            pred = model(data[0].to(device), data[1].to(device))\n            max_index = torch.argmax(pred[0]).item()\n            if (max_index == data[2][0][0]):\n                correct += 1\n            i = i +1\n    correct /= size\n    test_loss = sum(loss_ls) / i\n    print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-25T06:46:08.880068Z","iopub.execute_input":"2024-06-25T06:46:08.88079Z","iopub.status.idle":"2024-06-25T06:46:08.896306Z","shell.execute_reply.started":"2024-06-25T06:46:08.880757Z","shell.execute_reply":"2024-06-25T06:46:08.895205Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"epochs = 10\nloss_ls = []\ni = 1\nfor t in range(epochs):\n    print(f\"Epoch {t+1}\\n-------------------------------\")\n    train_loop(data_train_loader, model, optimizer)\n    torch.save(model.state_dict(), f\"/kaggle/working/model_{t}.pt\")\nprint(\"Done!\")","metadata":{"execution":{"iopub.status.busy":"2024-06-25T06:46:11.976234Z","iopub.execute_input":"2024-06-25T06:46:11.976573Z","iopub.status.idle":"2024-06-25T06:55:05.671564Z","shell.execute_reply.started":"2024-06-25T06:46:11.976544Z","shell.execute_reply":"2024-06-25T06:55:05.670177Z"},"trusted":true},"execution_count":48,"outputs":[{"name":"stdout","text":"Epoch 1\n-------------------------------\nloss: 7.016322 , avg_loss: 7.016322, acc: 0.000000\nloss: 6.466575 , avg_loss: 5.548809, acc: 0.078921\nloss: 6.109658 , avg_loss: 5.140315, acc: 0.098951\nloss: 0.495732 , avg_loss: 4.930180, acc: 0.107298\nloss: 9.015408 , avg_loss: 4.760104, acc: 0.124219\nloss: 2.070282 , avg_loss: 4.637141, acc: 0.131574\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[48], line 6\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m t \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(epochs):\n\u001b[1;32m      5\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEpoch \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mt\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m1\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m-------------------------------\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m----> 6\u001b[0m     \u001b[43mtrain_loop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata_train_loader\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmodel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43moptimizer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      7\u001b[0m     torch\u001b[38;5;241m.\u001b[39msave(model\u001b[38;5;241m.\u001b[39mstate_dict(), \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m/kaggle/working/model_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mt\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m.pt\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      8\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mDone!\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","Cell \u001b[0;32mIn[47], line 25\u001b[0m, in \u001b[0;36mtrain_loop\u001b[0;34m(dataloader, model, optimizer)\u001b[0m\n\u001b[1;32m     22\u001b[0m optimizer\u001b[38;5;241m.\u001b[39mstep()\n\u001b[1;32m     23\u001b[0m optimizer\u001b[38;5;241m.\u001b[39mzero_grad()\n\u001b[0;32m---> 25\u001b[0m avg_loss \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43msum\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mloss_ls\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;241m/\u001b[39m i\n\u001b[1;32m     26\u001b[0m acc \u001b[38;5;241m=\u001b[39m correct \u001b[38;5;241m/\u001b[39m i\n\u001b[1;32m     27\u001b[0m torch\u001b[38;5;241m.\u001b[39mnn\u001b[38;5;241m.\u001b[39mutils\u001b[38;5;241m.\u001b[39mclip_grad_norm_(model\u001b[38;5;241m.\u001b[39mparameters(), avg_loss)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}]},{"cell_type":"code","source":"test_loop(data_test_loader, model, loss_fn)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T05:45:50.402824Z","iopub.execute_input":"2024-06-25T05:45:50.403278Z","iopub.status.idle":"2024-06-25T05:50:42.555789Z","shell.execute_reply.started":"2024-06-25T05:45:50.403242Z","shell.execute_reply":"2024-06-25T05:50:42.554709Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"Test Error: \n Accuracy: 5.0%, Avg loss: 7.029812 \n\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}